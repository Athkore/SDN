{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["tmp_4", 32, false],
        ["enable_meas_0", 1, false],
        ["metadata.customer_id", 16, false],
        ["metadata.ingress_port", 16, false],
        ["metadata.tunnel_id", 16, false],
        ["metadata.rtt", 48, false],
        ["metadata.learn_tunnel", 16, false],
        ["metadata.packet_last_seen", 48, false],
        ["metadata.index", 12, false],
        ["metadata.ecmp_hash", 14, false],
        ["metadata.ecmp_nr_ports", 9, false],
        ["_padding_0", 4, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "tunnel_t",
      "id" : 3,
      "fields" : [
        ["tunnel_id", 16, false],
        ["pw_id", 16, false],
        ["proto_id", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "cpu_t",
      "id" : 5,
      "fields" : [
        ["srcAddr", 48, false],
        ["ingress_port", 16, false],
        ["customer_id", 16, false],
        ["tunnel_id", 16, false]
      ]
    },
    {
      "name" : "rtt_t",
      "id" : 6,
      "fields" : [
        ["pw_id", 16, false],
        ["ip_src", 32, false],
        ["ip_dst", 32, false],
        ["rtt", 48, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 7,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["cwr", 1, false],
        ["ece", 1, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tunnel",
      "id" : 3,
      "header_type" : "tunnel_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cpu",
      "id" : 5,
      "header_type" : "cpu_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "rtt",
      "id" : 6,
      "header_type" : "rtt_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 7,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "fl",
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 53,
        "column" : 28,
        "source_fragment" : "meta"
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "metadata.customer_id"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ingress_port"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.tunnel_id"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.rtt"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.learn_tunnel"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.packet_last_seen"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.index"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ecmp_hash"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ecmp_nr_ports"]
        }
      ]
    },
    {
      "id" : 2,
      "name" : "fl_0",
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 244,
        "column" : 29,
        "source_fragment" : "meta"
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "metadata.customer_id"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ingress_port"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.tunnel_id"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.rtt"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.learn_tunnel"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.packet_last_seen"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.index"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ecmp_hash"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ecmp_nr_ports"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6],
    ["ParserInvalidArgument", 7]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x1212",
              "mask" : null,
              "next_state" : "parse_tunnel"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_tunnel",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tunnel"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["tunnel", "proto_id"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/include/parsers.p4",
        "line" : 49,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "cpu", "rtt", "tunnel", "ipv4", "tcp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.enable_measurements",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 34,
        "column" : 24,
        "source_fragment" : "enable_measurements"
      },
      "size" : 4096,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.previous_timestamp",
      "id" : 1,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 39,
        "column" : 28,
        "source_fragment" : "previous_timestamp"
      },
      "size" : 4096,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.ecmp_ports",
      "id" : 2,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 41,
        "column" : 26,
        "source_fragment" : "ecmp_ports"
      },
      "size" : 256,
      "bitwidth" : 9
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.customer_id"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.customer_id"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 340,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ecn"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.mac_learn",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 51,
            "column" : 8,
            "source_fragment" : "meta.ingress_port = (bit<16>) standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.learn_tunnel"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 52,
            "column" : 8,
            "source_fragment" : "meta.learn_tunnel = meta.tunnel_id"
          }
        },
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 53,
            "column" : 1,
            "source_fragment" : "clone3(CloneType.I2E, 100, meta)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ecmp_group",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "out_tunnel",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 0
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 73,
            "column" : 44,
            "source_fragment" : "(bit<32>)out_tunnel"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ecmp_nr_ports"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.ecmp_ports"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 73,
            "column" : 8,
            "source_fragment" : "ecmp_ports.read(meta.ecmp_nr_ports, (bit<32>)out_tunnel)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 75,
            "column" : 1,
            "source_fragment" : "meta.tunnel_id = out_tunnel"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ecmp_hash"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ecmp_nr_ports"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 77,
            "column" : 8,
            "source_fragment" : "hash(meta.ecmp_hash, ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "out_port",
          "bitwidth" : 9
        },
        {
          "name" : "out_tunnel",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 88,
            "column" : 1,
            "source_fragment" : "standard_metadata.egress_spec = out_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 89,
            "column" : 5,
            "source_fragment" : "meta.tunnel_id = out_tunnel"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward_ecmp",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "out_port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 92,
            "column" : 1,
            "source_fragment" : "standard_metadata.egress_spec = out_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_enable_interarrival_time",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "value",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.index"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 126,
            "column" : 34,
            "source_fragment" : "(bit<32>)meta.index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.enable_measurements"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 126,
            "column" : 8,
            "source_fragment" : "enable_measurements.write((bit<32>)meta.index, value)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.index"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 127,
            "column" : 30,
            "source_fragment" : "(bit<32>)meta.index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.previous_timestamp"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 127,
            "column" : 5,
            "source_fragment" : "previous_timestamp.write((bit<32>)meta.index, standard_metadata.ingress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_mcast_grp",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 147,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = meta.customer_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_mcast_grp_2",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 151,
            "column" : 1,
            "source_fragment" : "standard_metadata.mcast_grp = (bit<16>) standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_customer",
      "id" : 12,
      "runtime_data" : [
        {
          "name" : "customer_id",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 171,
            "column" : 8,
            "source_fragment" : "meta.customer_id = customer_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_from_tunnel",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            },
            {
              "type" : "field",
              "value" : ["tunnel", "pw_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 176,
            "column" : 8,
            "source_fragment" : "meta.customer_id = hdr.tunnel.pw_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel_id"]
            },
            {
              "type" : "field",
              "value" : ["tunnel", "tunnel_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "meta.tunnel_id = hdr.tunnel.tunnel_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.tunnel_egress",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "field",
              "value" : ["tunnel", "proto_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 196,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.etherType = hdr.tunnel.proto_id"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "tunnel"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 197,
            "column" : 8,
            "source_fragment" : "hdr.tunnel.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.tunnel_forward",
      "id" : 15,
      "runtime_data" : [
        {
          "name" : "out_port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 202,
            "column" : 9,
            "source_fragment" : "meta.customer_id = (bit<16>) 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 203,
            "column" : 9,
            "source_fragment" : "standard_metadata.egress_spec = out_port"
          }
        }
      ]
    },
    {
      "name" : "your_pipeline223",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.index"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x0fff"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 223,
            "column" : 12,
            "source_fragment" : "hash(meta.index,HashAlgorithm.crc16,(bit<16>)0, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.index"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 230,
            "column" : 50,
            "source_fragment" : "(bit<32>)meta.index"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "enable_meas_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.enable_measurements"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 230,
            "column" : 12,
            "source_fragment" : "enable_measurements.read(enable_meas, (bit<32>)meta.index)"
          }
        }
      ]
    },
    {
      "name" : "your_pipeline236",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.index"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 236,
            "column" : 56,
            "source_fragment" : "(bit<32>)meta.index"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.packet_last_seen"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.previous_timestamp"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 236,
            "column" : 9,
            "source_fragment" : "previous_timestamp.read(meta.packet_last_seen, (bit<32>)meta.index)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.index"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 238,
            "column" : 34,
            "source_fragment" : "(bit<32>)meta.index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.previous_timestamp"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 238,
            "column" : 9,
            "source_fragment" : "previous_timestamp.write((bit<32>)meta.index, standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.rtt"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.packet_last_seen"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 240,
            "column" : 18,
            "source_fragment" : "standard_metadata.ingress_global_timestamp - meta.packet_last_seen; ..."
          }
        },
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            },
            {
              "type" : "hexstr",
              "value" : "0x2"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 244,
            "column" : 2,
            "source_fragment" : "clone3(CloneType.I2E, 100, meta)"
          }
        }
      ]
    },
    {
      "name" : "NoAction",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyEgress.tunnel_ingress",
      "id" : 19,
      "runtime_data" : [
        {
          "name" : "tunnel",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "tunnel"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 284,
            "column" : 8,
            "source_fragment" : "hdr.tunnel.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["tunnel", "tunnel_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 285,
            "column" : 8,
            "source_fragment" : "hdr.tunnel.tunnel_id = tunnel"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["tunnel", "pw_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 286,
            "column" : 8,
            "source_fragment" : "hdr.tunnel.pw_id = meta.customer_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["tunnel", "proto_id"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 287,
            "column" : 8,
            "source_fragment" : "hdr.tunnel.proto_id = hdr.ethernet.etherType"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1212"
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/headers.p4",
            "line" : 9,
            "column" : 28,
            "source_fragment" : "0x1212; ..."
          }
        }
      ]
    },
    {
      "name" : "your_pipeline308",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "rtt"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 308,
            "column" : 2,
            "source_fragment" : "hdr.rtt.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["rtt", "pw_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 309,
            "column" : 2,
            "source_fragment" : "hdr.rtt.pw_id = meta.customer_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["rtt", "ip_src"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 310,
            "column" : 2,
            "source_fragment" : "hdr.rtt.ip_src = hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["rtt", "ip_dst"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 311,
            "column" : 2,
            "source_fragment" : "hdr.rtt.ip_dst = hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["rtt", "rtt"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.rtt"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 312,
            "column" : 2,
            "source_fragment" : "hdr.rtt.rtt = meta.rtt"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x5678"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 15,
            "column" : 31,
            "source_fragment" : "0x5678; ..."
          }
        }
      ]
    },
    {
      "name" : "your_pipeline316",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cpu"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 316,
            "column" : 13,
            "source_fragment" : "hdr.cpu.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 317,
            "column" : 9,
            "source_fragment" : "hdr.cpu.srcAddr = hdr.ethernet.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu", "ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 318,
            "column" : 10,
            "source_fragment" : "hdr.cpu.ingress_port = (bit<16>) meta.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu", "customer_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.customer_id"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 319,
            "column" : 10,
            "source_fragment" : "hdr.cpu.customer_id = meta.customer_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu", "tunnel_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.learn_tunnel"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 320,
            "column" : 13,
            "source_fragment" : "hdr.cpu.tunnel_id = meta.learn_tunnel"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1234"
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 14,
            "column" : 36,
            "source_fragment" : "0x1234; ..."
          }
        }
      ]
    },
    {
      "name" : "your_pipeline327",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel_id"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_rid"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 327,
            "column" : 20,
            "source_fragment" : "meta.tunnel_id = standard_metadata.egress_rid"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 29,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_your_pipeline223",
          "id" : 0,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 223,
            "column" : 12,
            "source_fragment" : "hash(meta.index,HashAlgorithm.crc16,(bit<16>)0, ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["your_pipeline223"],
          "base_default_next" : "MyIngress.synfin",
          "next_tables" : {
            "your_pipeline223" : "MyIngress.synfin"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.synfin",
          "id" : 1,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 130,
            "column" : 10,
            "source_fragment" : "synfin"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.syn",
              "target" : ["tcp", "syn"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.fin",
              "target" : ["tcp", "fin"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 3],
          "actions" : ["MyIngress.set_enable_interarrival_time", "NoAction"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "MyIngress.set_enable_interarrival_time" : "node_5",
            "NoAction" : "node_5"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_your_pipeline236",
          "id" : 2,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 236,
            "column" : 9,
            "source_fragment" : "previous_timestamp.read(meta.packet_last_seen, (bit<32>)meta.index); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["your_pipeline236"],
          "base_default_next" : "MyIngress.customer_id",
          "next_tables" : {
            "your_pipeline236" : "MyIngress.customer_id"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.customer_id",
          "id" : 3,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 180,
            "column" : 10,
            "source_fragment" : "customer_id"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12, 13],
          "actions" : ["MyIngress.set_customer", "MyIngress.set_from_tunnel"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "MyIngress.set_customer" : "node_8",
            "MyIngress.set_from_tunnel" : "node_8"
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.VPLS_table",
          "id" : 4,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 206,
            "column" : 10,
            "source_fragment" : "VPLS_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.tunnel.tunnel_id",
              "target" : ["tunnel", "tunnel_id"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15, 14, 4],
          "actions" : ["MyIngress.tunnel_forward", "MyIngress.tunnel_egress", "NoAction"],
          "base_default_next" : "node_10",
          "next_tables" : {
            "MyIngress.tunnel_forward" : "node_10",
            "MyIngress.tunnel_egress" : "node_10",
            "NoAction" : "node_10"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.smac",
          "id" : 5,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 56,
            "column" : 10,
            "source_fragment" : "smac"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.srcAddr",
              "target" : ["ethernet", "srcAddr"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.customer_id",
              "target" : ["scalars", "metadata.customer_id"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 0],
          "actions" : ["MyIngress.mac_learn", "NoAction"],
          "base_default_next" : "MyIngress.dmac",
          "next_tables" : {
            "MyIngress.mac_learn" : "MyIngress.dmac",
            "NoAction" : "MyIngress.dmac"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.dmac",
          "id" : 6,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 96,
            "column" : 10,
            "source_fragment" : "dmac"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.customer_id",
              "target" : ["scalars", "metadata.customer_id"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ipv4.protocol",
              "target" : ["ipv4", "protocol"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 6, 1],
          "actions" : ["MyIngress.forward", "MyIngress.ecmp_group", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.ecmp_group" : "MyIngress.ecmp_group_to_forward",
            "NoAction" : "MyIngress.broadcast",
            "MyIngress.forward" : null
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ecmp_group_to_forward",
          "id" : 7,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 111,
            "column" : 10,
            "source_fragment" : "ecmp_group_to_forward"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.tunnel_id",
              "target" : ["scalars", "metadata.tunnel_id"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_hash",
              "target" : ["scalars", "metadata.ecmp_hash"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8, 2],
          "actions" : ["MyIngress.forward_ecmp", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.forward_ecmp" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.broadcast",
          "id" : 8,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 155,
            "column" : 10,
            "source_fragment" : "broadcast"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10, 11],
          "actions" : ["MyIngress.set_mcast_grp", "MyIngress.set_mcast_grp_2"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.set_mcast_grp" : null,
            "MyIngress.set_mcast_grp_2" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 221,
            "column" : 11,
            "source_fragment" : "hdr.ipv4.protocol == TYPE_TCP && !hdr.tunnel.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "protocol"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x06"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["tunnel", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          },
          "true_next" : "tbl_your_pipeline223",
          "false_next" : "MyIngress.customer_id"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 233,
            "column" : 15,
            "source_fragment" : "enable_meas==1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "enable_meas_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_your_pipeline236",
          "false_next" : "MyIngress.customer_id"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 250,
            "column" : 12,
            "source_fragment" : "hdr.tunnel.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tunnel", "$valid$"]
              }
            }
          },
          "true_next" : "MyIngress.VPLS_table",
          "false_next" : "node_10"
        },
        {
          "name" : "node_10",
          "id" : 3,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 253,
            "column" : 12,
            "source_fragment" : "!hdr.tunnel.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["tunnel", "$valid$"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.smac"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 275,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_17",
      "tables" : [
        {
          "name" : "tbl_your_pipeline308",
          "id" : 9,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 308,
            "column" : 2,
            "source_fragment" : "hdr.rtt.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["your_pipeline308"],
          "base_default_next" : null,
          "next_tables" : {
            "your_pipeline308" : null
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_your_pipeline316",
          "id" : 10,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 316,
            "column" : 13,
            "source_fragment" : "hdr.cpu.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["your_pipeline316"],
          "base_default_next" : null,
          "next_tables" : {
            "your_pipeline316" : null
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_your_pipeline327",
          "id" : 11,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 327,
            "column" : 35,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["your_pipeline327"],
          "base_default_next" : "MyEgress.tunnel_table",
          "next_tables" : {
            "your_pipeline327" : "MyEgress.tunnel_table"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyEgress.tunnel_table",
          "id" : 12,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 291,
            "column" : 10,
            "source_fragment" : "tunnel_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.tunnel_id",
              "target" : ["scalars", "metadata.tunnel_id"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19, 18],
          "actions" : ["MyEgress.tunnel_ingress", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyEgress.tunnel_ingress" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_17",
          "id" : 4,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 306,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type==1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "node_18",
          "false_next" : "node_21"
        },
        {
          "name" : "node_18",
          "id" : 5,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 307,
            "column" : 7,
            "source_fragment" : "meta.rtt != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.rtt"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x000000000000"
              }
            }
          },
          "true_next" : "tbl_your_pipeline308",
          "false_next" : "tbl_your_pipeline316"
        },
        {
          "name" : "node_21",
          "id" : 6,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 325,
            "column" : 8,
            "source_fragment" : "!hdr.tunnel.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["tunnel", "$valid$"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_22"
        },
        {
          "name" : "node_22",
          "id" : 7,
          "source_info" : {
            "filename" : "p4src/your_pipeline.p4",
            "line" : 326,
            "column" : 19,
            "source_fragment" : "standard_metadata.mcast_grp != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "mcast_grp"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000"
              }
            }
          },
          "true_next" : "tbl_your_pipeline327",
          "false_next" : "MyEgress.tunnel_table"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/your_pipeline.p4",
        "line" : 340,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_1",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/home/p4/Public/p4src/your_pipeline.p4i",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}